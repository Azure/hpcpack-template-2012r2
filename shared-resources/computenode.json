{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for the resources."
      }
    },
    "nicName": {
      "type": "string",
      "metadata": {
        "description": "The network interface name for the VM"
      }
    },
    "subnetId": {
      "type": "string",
      "metadata": {
        "description": "The Id of the subnet in which the node is created"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The VM name"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The VM role size"
      }
    },
    "osDiskType": {
      "type": "string",
      "metadata": {
        "description": "The OS disk type of the VM"
      }
    },
    "dataDiskSize": {
      "defaultValue": 128,
      "type": "int",
      "metadata": {
        "description": "The size in GB of each data disk that is attached to the VM."
      }
    },
    "dataDiskCount": {
      "defaultValue": 0,
      "type": "int",
      "metadata": {
        "description": "The count of data disks attached to the VM."
      }
    },
    "dataDiskType": {
      "type": "string",
      "metadata": {
        "description": "The data disk type of the VM"
      }
    },
    "imageReference": {
      "type": "object",
      "metadata": {
        "description": "The image reference"
      }
    },
    "imageOsPlatform": {
      "type": "string",
      "metadata": {
        "description": "The VM image OS platform for the compute nodes"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The user name of the administrator"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the administrator"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The availability set name to join if specified"
      }
    },
    "customData": {
      "type": "string",
      "defaultValue": "[base64('None')]",
      "metadata": {
        "description": "The custom data in base64 format"
      }
    },
    "installRDMADriver": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specify whether to install RDMA driver, not used for Linux node"
      }
    },
    "enableAutomaticUpdates": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specify whether the VM is enabled for automatic updates, not used for Linux node"
      }
    },
    "enableAcceleratedNetworking": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specify whether to create the Azure VM with accelerated networking"
      }
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "The HPC cluster name"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The fully qualified domain name (FQDN) for the domain forest in which the cluster is created, for example 'hpc.local'."
      }
    },
    "dnsServers": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "The DNS servers"
      }
    },
    "computeNodeCustomScriptFileUrls": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional, the URL(s) for the PowerShell script file(s) you want to run on the compute node after it is configured. The script will be run as the Local System account (or root for Linux nodes)."
      }
    },
    "computeNodeCustomScriptCommand": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional, the command line to run the compute node post-config script. The script will be run as the Local System account. For example 'mycnpostscript.ps1 -Arg1 arg1 -Arg2 arg2'."
      }
    }
  },
  "variables": {
    "isWindowsOS": "[equals(toLower(parameters('imageOsPlatform')), 'windows')]",
    "windowsConfiguration": {
      "enableAutomaticUpdates": "[parameters('enableAutomaticUpdates')]"
    },
    "emptyArray": [],
    "vmdataDisks": {
      "copy": [
        {
          "name": "dataDisks",
          "count": "[if(equals(parameters('dataDiskCount'), 0), 1, parameters('dataDiskCount'))]",
          "input": {
            "lun": "[copyIndex('dataDisks')]",
            "createOption": "Empty",
            "diskSizeGB": "[parameters('dataDiskSize')]",
            "managedDisk": {
              "storageAccountType": "[parameters('dataDiskType')]"
            }
          }
        }
      ]
    },
    "availabilitySet": {
      "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
    },
    "dnsSettings": {
      "dnsServers": "[parameters('dnsServers')]"
    }
  },
  "resources": [
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('nicName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "IPConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetId')]"
              }
            }
          }
        ],
        "dnsSettings": "[if(empty(parameters('dnsServers')), json('null'), variables('dnsSettings'))]",
        "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]"
      }
    },
    {
      "apiVersion": "2018-10-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'))]"
      ],
      "properties": {
        "availabilitySet": "[if(empty(parameters('availabilitySetName')), json('null'), variables('availabilitySet'))]",
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[parameters('customData')]",
          "windowsConfiguration": "[if(variables('isWindowsOS'), variables('windowsConfiguration'), json('null'))]"
        },
        "storageProfile": {
          "imageReference": "[parameters('imageReference')]",
          "osDisk": {
            "name": "[concat(parameters('vmName'), '-osdisk')]",
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            }
          },
          "dataDisks": "[if(equals(parameters('dataDiskCount'), 0), variables('emptyArray'), variables('vmDataDisks').dataDisks)]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "condition": "[and(variables('isWindowsOS'), parameters('installRDMADriver'))]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'), '/installRDMADriver')]",
          "apiVersion": "2018-10-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.HpcCompute",
            "type": "HpcVmDrivers",
            "typeHandlerVersion": "1.1",
            "autoUpgradeMinorVersion": true
          }
        },
        {
          "condition": "[variables('isWindowsOS')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'),'/joinADDomain')]",
          "apiVersion": "2018-10-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), '/extensions/installRDMADriver')]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "Name": "[parameters('domainName')]",
              "User": "[concat(parameters('domainName'), '\\', parameters('adminUsername'))]",
              "NumberOfRetries": "50",
              "RetryIntervalInMilliseconds": "10000",
              "Restart": "true",
              "Options": "3"
            },
            "protectedSettings": {
              "Password": "[parameters('adminPassword')]"
            }
          }
        },
        {
          "condition": "[and(variables('isWindowsOS'), not(empty(parameters('computeNodeCustomScriptCommand'))))]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'),'/customScript')]",
          "apiVersion": "2018-10-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), '/extensions/joinADDomain')]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": "[parameters('computeNodeCustomScriptFileUrls')]"
            },
            "protectedSettings": {
              "commandToExecute": "[if(endsWith(tolower(split(parameters('computeNodeCustomScriptCommand'), ' ')[0]), '.ps1'), concat('powershell.exe -ExecutionPolicy Unrestricted -File ', parameters('computeNodeCustomScriptCommand')), parameters('computeNodeCustomScriptCommand'))]"
            }
          }
        },
        {
          "condition": "[not(variables('isWindowsOS'))]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'), '/installHPCNodeAgent')]",
          "apiVersion": "2018-10-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.HpcPack",
            "type": "LinuxNodeAgent",
            "typeHandlerVersion": "1.6",
            "autoUpgradeMinorVersion": true,
            "protectedSettings": {
              "ClusterName": "[concat(parameters('clusterName'), '.', parameters('domainName'))]"
            }
          }
        },
        {
          "condition": "[and(not(variables('isWindowsOS')), not(empty(parameters('computeNodeCustomScriptCommand'))))]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'), '/customLinuxScript')]",
          "apiVersion": "2018-10-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), '/extensions/installHPCNodeAgent')]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": "[parameters('computeNodeCustomScriptFileUrls')]"
            },
            "protectedSettings": {
              "commandToExecute": "[parameters('computeNodeCustomScriptCommand')]"
            }
          }
        }
      ]
    }
  ]
}