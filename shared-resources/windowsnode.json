{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the resources."
      }
    },
    "nicName": {
      "type": "string",
      "metadata": {
        "description": "The network interface name for the VM"
      }
    },
    "subnetId": {
      "type": "string",
      "metadata": {
        "description": "The Id of the subnet in which the node is created"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The VM name"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The VM role size"
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "The storage account type for the disks of the VM"
      }
    },
    "imageReference": {
      "type": "object",
      "metadata": {
        "description": "The image reference"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The user name of the administrator"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the administrator"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The availability set name to join if specified"
      }
    },
    "customData": {
      "type": "string",
      "defaultValue": "[base64('None')]",
      "metadata": {
        "description": "The custom data in base64 format"
      }
    },
    "installRDMADriver": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specify whether to install RDMA driver"
      }
    },
    "enableAutomaticUpdates": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specify whether the VM is enabled for automatic updates"
      }
    },
    "enableAcceleratedNetworking": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specify whether to create the Azure VM with accelerated networking"
      }
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "The HPC cluster name"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The fully qualified domain name (FQDN) for the domain forest in which the compute node will join, for example 'hpc.local'."
      }
    },
    "computeNodePostConfigScriptFileUrls": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional, the URL(s) for the PowerShell script file(s) you want to run on the compute node after it is configured. The script will be run as the Local System account (or root for Linux nodes)."
      }
    },
    "computeNodePostConfigScriptCommand": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional, the command line to run the compute node post-config script. The script will be run as the Local System account. For example 'mycnpostscript.ps1 -Arg1 arg1 -Arg2 arg2'."
      }
    }
  },
  "variables": {
    "availabilitySet": {
      "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
    }
  },
  "resources": [
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('nicName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "IPConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetId')]"
              }
            }
          }
        ],
        "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]"
      }
    },
    {
      "apiVersion": "2018-10-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'))]"
      ],
      "properties": {
        "availabilitySet": "[if(empty(parameters('availabilitySetName')), json('null'), variables('availabilitySet'))]",
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[parameters('customData')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": "[parameters('enableAutomaticUpdates')]"
          }
        },
        "storageProfile": {
          "imageReference": "[parameters('imageReference')]",
          "osDisk": {
            "name": "[concat(parameters('vmName'), '-osdisk')]",
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "condition": "[parameters('installRDMADriver')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'), '/installRDMADriver')]",
          "apiVersion": "2018-10-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.HpcCompute",
            "type": "HpcVmDrivers",
            "typeHandlerVersion": "1.1",
            "autoUpgradeMinorVersion": true
          }
        },
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'),'/joinADDomain')]",
          "apiVersion": "2018-10-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), '/extensions/installRDMADriver')]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "Name": "[parameters('domainName')]",
              "User": "[concat(parameters('domainName'), '\\', parameters('adminUsername'))]",
              "NumberOfRetries": "50",
              "RetryIntervalInMilliseconds": "10000",
              "Restart": "true",
              "Options": "3"
            },
            "protectedSettings": {
              "Password": "[parameters('adminPassword')]"
            }
          }
        },
        {
          "condition": "[not(empty(parameters('computeNodePostConfigScriptCommand')))]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'),'/postConfigScript')]",
          "apiVersion": "2018-10-01",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), '/extensions/joinADDomain')]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": "[parameters('computeNodePostConfigScriptFileUrls')]"
            },
            "protectedSettings": {
              "commandToExecute": "[if(endsWith(tolower(split(parameters('computeNodePostConfigScriptCommand'), ' ')[0]), '.ps1'), concat('powershell.exe -ExecutionPolicy Unrestricted -File ', parameters('computeNodePostConfigScriptCommand')), parameters('computeNodePostConfigScriptCommand'))]"
            }
          }
        }
      ]
    }
  ]
}